$date
	Fri May 17 08:53:44 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module wb $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " cin $end
$var wire 1 # carry $end
$var wire 4 $ bin2 [3:0] $end
$var wire 4 % bin1 [3:0] $end
$scope module dut $end
$var wire 4 & y [3:0] $end
$var wire 4 ' x [3:0] $end
$var wire 4 ( sum [3:0] $end
$var wire 1 ) cout3 $end
$var wire 1 * cout2 $end
$var wire 1 + cout1 $end
$var wire 1 " cin $end
$var wire 1 # carry $end
$scope module FA1 $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 + cout $end
$var wire 1 . sum $end
$var wire 1 / w1 $end
$var wire 1 " c $end
$upscope $end
$scope module FA2 $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 + c $end
$var wire 1 * cout $end
$var wire 1 2 sum $end
$var wire 1 3 w1 $end
$upscope $end
$scope module FA3 $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 * c $end
$var wire 1 ) cout $end
$var wire 1 6 sum $end
$var wire 1 7 w1 $end
$upscope $end
$scope module FA4 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 ) c $end
$var wire 1 # cout $end
$var wire 1 : sum $end
$var wire 1 ; w1 $end
$upscope $end
$upscope $end
$scope module tb $end
$var wire 1 # carry $end
$var wire 4 < sum [3:0] $end
$var reg 4 = bin1 [3:0] $end
$var reg 4 > bin2 [3:0] $end
$var reg 1 " cin $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b1010 >
b101 =
b1111 <
1;
1:
19
08
17
16
05
14
13
12
11
00
1/
1.
0-
1,
0+
0*
0)
b1111 (
b101 '
b1010 &
b101 %
b1010 $
0#
0"
b1111 !
$end
#5
1#
0:
1)
06
1*
03
1+
04
10
15
b10 !
b10 (
b10 <
0.
b11 %
b11 '
b11 =
b1110 $
b1110 &
b1110 >
1"
#10
12
0/
1+
18
14
09
05
1-
b10 !
b10 (
b10 <
0.
b1111 %
b1111 '
b1111 =
b11 $
b11 &
b11 >
0"
#15
1:
0#
02
0;
13
08
01
b1001 !
b1001 (
b1001 <
1.
b111 %
b111 '
b111 =
b1 $
b1 &
b1 >
1"
#20
0:
0)
12
0*
b10 !
b10 (
b10 <
0.
07
03
1/
04
00
0,
b0 %
b0 '
b0 =
#25
0#
16
0)
1:
0*
0+
1;
17
13
18
14
10
1,
0-
b1111 !
b1111 (
b1111 <
1.
b1111 %
b1111 '
b1111 =
b0 $
b0 &
b0 >
0"
#30
1)
06
1*
1:
02
0;
0/
1+
08
1-
b1001 !
b1001 (
b1001 <
1.
b111 %
b111 '
b111 =
b1 $
b1 &
b1 >
1"
#35
b1000 !
b1000 (
b1000 <
0.
0"
#40
